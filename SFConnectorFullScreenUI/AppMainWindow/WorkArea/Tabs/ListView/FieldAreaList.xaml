<UserControl
             x:Class="SFConnectorFullScreenUI.FieldAreaList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SFConnectorFullScreenUI"
    
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="900">
    <UserControl.Resources>
        <Style x:Key="ListViewStyleFlat" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource WorkAreaBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                              Background="{TemplateBinding Background}" 
                                             SnapsToDevicePixels="true">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="{StaticResource ListItem.Selected}"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="{StaticResource ListItem.Selected}"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="{StaticResource ListItem.Selected}"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="{StaticResource ListItem.Selected}"/>
        <Style x:Key="ListViewItemStyleFlat" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <GridViewRowPresenter Content="{TemplateBinding Content}"
                                                            Columns="{TemplateBinding GridView.ColumnCollection}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GridViewColumnHeaderGripper" 
             TargetType="Thumb">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}" 
                          Background="Transparent">
                            <Rectangle HorizontalAlignment="Center" 
                                 Width="3"
                          Fill="{TemplateBinding Background}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="GridViewColumnHeaderStyleFlat" TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
            <Setter Property="Background" Value="{StaticResource ShadowLightBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid>

                            <Border BorderThickness="0,0,0,1" BorderBrush="{StaticResource HighlightBrush}" Background="{TemplateBinding Background}">
                                <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" 
                                           Margin="5,5,5,5" Width="{TemplateBinding Width}" TextAlignment="Center" />
                            </Border>
                            <Thumb x:Name="PART_HeaderGripper" Width="2" Background="{StaticResource HighlightBrush}" 
                                   HorizontalAlignment="Right" 
                                   Margin="0,0,0,0" Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource HighlightBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>

        
        <!--<Style x:Key="GridViewColumnHeaderStyleFlat2" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource WorkAreaBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="2,0,2,0"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid SnapsToDevicePixels="true"
                          Background="{TemplateBinding Background}">
                            <Border x:Name="HighlightBorder"
                                VerticalAlignment="Bottom"
                                Background="{StaticResource BrightGreenBrush}"
                                BorderBrush="{StaticResource BrightGreenBrush}"
                                Height="3"
                                BorderThickness="0,0,0,1"/>
                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}"
                                Margin="1,0,1,0">
                                <ContentPresenter x:Name="HeaderContent"
                                              Margin="0,0,0,1"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Canvas>
                                
                            <Thumb x:Name="PART_HeaderGripper" />
                        
                            </Canvas>
                            <Border x:Name="HeaderPressBorder" BorderThickness="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="HighlightBorder" Property="BorderBrush"
                                    Value="{StaticResource BrightGreenBrush}"/>
                                <Setter TargetName="HighlightBorder" Property="Background"
                                    Value="{StaticResource BrightGreenBrush}"/>
                                <Setter TargetName="HighlightBorder" Property="CornerRadius" Value="0,0,3,3"/>
                                <Setter TargetName="HighlightBorder" Property="BorderThickness" Value="1,0,1,1"/>
                                --><!-- <Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent"/> --><!--
                                <Setter Property="Background" Value="{StaticResource BrightGreenBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="HighlightBorder" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="HeaderPressBorder" Property="BorderBrush" Value="{StaticResource BrightGreenBrush}"/>
                                <Setter TargetName="HeaderPressBorder" Property="Margin" Value="1,0,0,0"/>
                                <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0"/>
                                <Setter Property="Background" Value="{StaticResource BrightGreenBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource BrightGreenBrush}"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Role" Value="Floating">
                    <Setter Property="Opacity" Value="0.7"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                <Canvas Name="PART_FloatingHeaderCanvas" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Role" Value="Padding">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <Border VerticalAlignment="Bottom"
                                        Background="{StaticResource BrightGreenBrush}"
                                        BorderBrush="{StaticResource BrightGreenBrush}"
                                        Height="3"
                                        BorderThickness="0,0,0,1"/>
                                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Padding="{TemplateBinding Padding}" 
                                        Margin="1,0,1,0"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Height" Value="Auto">
                                        <Setter Property="MinHeight" Value="20"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>-->
    </UserControl.Resources>
    
    <!--END OF RESOURCES-->
    
    
    
    
    
    
    
    <Grid>
        <ListView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemContainerStyle="{StaticResource ListViewItemStyleFlat}"
                  ItemsSource="{Binding Cases, Mode=TwoWay}" SelectedItem="{Binding SelectedCase, Mode=TwoWay}" Style="{DynamicResource ListViewStyleFlat}" 
                  IsSynchronizedWithCurrentItem="True"
                  local:GridViewSort.AutoSort="True"
                  local:GridViewSort.ShowSortGlyph="False"
                  local:GridViewSort.SortGlyphAscending="/SFConnectorFullScreenUI;component/content/mainwindowui/images/up.png"
                  local:GridViewSort.SortGlyphDescending="/SFConnectorFullScreenUI;component/content/mainwindowui/images/down.png"
                  >
            
            <ListView.View>
                <GridView x:Name="casesGridView" ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyleFlat}">
                    <GridViewColumn DisplayMemberBinding="{Binding CaseNumber}" Header="CaseNumber" local:GridViewSort.PropertyName="CaseNumber"/>
                    <GridViewColumn Width="200" Header="Subject">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock TextWrapping="Wrap" Text="{Binding Subject}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="200" Header="Description">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock TextWrapping="Wrap" Text="{Binding Description}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding CreatedBy.Name}" Header="CreatedBy" local:GridViewSort.PropertyName="CreatedBy.Name"/>
                    <GridViewColumn DisplayMemberBinding="{Binding CaseOwner.Name}" Header="CaseOwner" local:GridViewSort.PropertyName="CaseOwner.Name"/>
                    <GridViewColumn DisplayMemberBinding="{Binding CreatedDate}" Header="CreatedDate" local:GridViewSort.PropertyName="CreatedDate"/>
                    <GridViewColumn DisplayMemberBinding="{Binding ClosedDate}" Header="ClosedDate" local:GridViewSort.PropertyName="ClosedDate"/>
                    <GridViewColumn DisplayMemberBinding="{Binding Priority}" Header="Priority" local:GridViewSort.PropertyName="Priority"/>
                    <GridViewColumn DisplayMemberBinding="{Binding Status.Value}" Header="Status" local:GridViewSort.PropertyName="Status.Value"/>
                </GridView>
            </ListView.View>
            
            <!--<ListView.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=CaseNumber, Mode=TwoWay}"></TextBlock>
                </DataTemplate>
            </ListView.ItemTemplate>-->



        </ListView>

    </Grid>
</UserControl>
