<UserControl x:Class="SFConnectorFullScreenUI.FileMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SFConnectorFullScreenUI"
             mc:Ignorable="d" 
             >

    <UserControl.CommandBindings>
        <CommandBinding Command="New" CanExecute="NewCommand_CanExecute" Executed="NewCommand_Executed" />

    </UserControl.CommandBindings>
    <UserControl.Resources>
        

    <!--ANOTHER NEW ONE-->
        <Style x:Key="MLB_Separator" TargetType="{x:Type Separator}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Grid>
                            <Rectangle Height="1" Stroke="{StaticResource HighlightBrush}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MLB_MenuItem" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                                
                                >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition x:Name="Col3" Width="14"/>
                                </Grid.ColumnDefinitions>

                                <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="5,5,-5,-5"
                                       Placement="Right" x:Name="SubMenuPopup" Focusable="false" 
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource ShadowBrush}" 
                                            BorderThickness="1" Padding="0">
                                        <Border BorderBrush="Transparent" BorderThickness="1" >
                                            <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                                <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Background="Transparent"/>
                                            </Grid>
                                        </Border>
                                    </Border>   
                                </Popup>
                                
                                <!-- ContentPresenter to show an Icon if needed -->
                                <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

                                <!-- Glyph is a checkmark if needed for a checkable menu -->
                                <Grid   Grid.ZIndex="2" Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                                </Grid>

                                <!-- Content for the menu text etc -->
                                <ContentPresenter  Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          x:Name="HeaderHost"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"/>

                                <!-- Content for the menu IGT -->
                                <ContentPresenter  Grid.Column="2"
                                          Margin="8,1,8,1"
                                          x:Name="IGTHost"
                                          ContentSource="InputGestureText"
                                          VerticalAlignment="Center"/>

                                <!-- Arrow drawn path which points to the next level of the menu -->
                                <Grid  Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                </Grid>

                               
                            </Grid>
                        </Border>

                        <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                        <ControlTemplate.Triggers>
                           
                            
                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                                <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>

                            
                            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>

                           
                                
                            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                                <Setter Property="Background" Value="{StaticResource ShadowBrush}" />

                            </Trigger>

                            <!-- Role = SubMenuItem : this is a child menu item which has children-->
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="Background" Value="{StaticResource ShadowBrush}" />
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                            </Trigger>

                            <!-- If no Icon is present the we collapse the Icon Content -->
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>

                            <!-- The GlyphPanel contains the CheckMark -->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>

                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="{StaticResource ResourceKey=HighlightBrush}" TargetName="Border"/>
                                
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="True" />
                                    <Condition Property="Role" Value="TopLevelHeader" />
                                    <Condition Property="IsSubmenuOpen"  Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" Value="{StaticResource ResourceKey=ShadowBrush}" TargetName="Border"></Setter>
                                    <Setter Property="BorderThickness" Value="1" TargetName="Border"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}" TargetName="Border"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </UserControl.Resources>

    <Menu  Width="Auto" Height="20"  Background="{StaticResource BackgroundBrush}" Foreground="{StaticResource ForegroundBrush}">

        <MenuItem Header="_File" Style="{StaticResource MLB_MenuItem}" >
            <MenuItem Header="_Open" Command="New" Style="{StaticResource MLB_MenuItem}">
                <!--<MenuItem Header="_Manage users">
                    <MenuItem.Icon>
                        <Image Source="/WpfTutorialSamples;component/Images/user.png" />
                    </MenuItem.Icon>
                </MenuItem>-->
            </MenuItem>
        </MenuItem>

        <MenuItem Header="_Edit" Style="{StaticResource MLB_MenuItem}" >
            <MenuItem Header="_Find" Style="{StaticResource MLB_MenuItem}"/>
        </MenuItem>
        <MenuItem Header="_View" Style="{StaticResource MLB_MenuItem}" >
            <MenuItem Header="_ViewMode" Style="{StaticResource MLB_MenuItem}"/>
        </MenuItem>

        <MenuItem x:Name="emu" Header="_Emulator"  Style="{StaticResource MLB_MenuItem}">
            <MenuItem x:Name="load" Header="Load..." Click="MenuItem_Click" Style="{StaticResource MLB_MenuItem}"/>
            <MenuItem Header="Load again" Click="menuEmulLoadLast" Style="{StaticResource MLB_MenuItem}"/>
            <Separator Style="{StaticResource MLB_Separator}"/>
            <MenuItem Header="SubMenu" Click="MenuItem_Click"  Style="{StaticResource MLB_MenuItem}">
                <MenuItem Header="Step" Click="MenuItem_Click" InputGestureText="F2" Style="{StaticResource MLB_MenuItem}"/>
            </MenuItem>
        </MenuItem>

    </Menu>

</UserControl>
